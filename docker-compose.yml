services:
  # frontend:
  #   build:
  #     context: ./frontend
  #   image: frontend
  #   container_name: frontend
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend:/app
  #   networks:
  #     - app-network

  ClientBackend:
    build:
      context: ./ClientBackend
    image: clientbackend
    container_name: clientbackend
    environment:
      DB_HOST: database
      DB_PORT: 3306
      DB_DATABASE: chess_nest
      DB_USERNAME: root
      DB_PASSWORD: password
    volumes:
      - ./ClientBackend:/var/www
    ports:
      - "8000:8000"
    depends_on:
      - database
    networks:
      - app-network

  # GameBackend:
  #   build:
  #     context: ./GameBackend
  #   image: gamebackend
  #   container_name: gamebackend
  #   volumes:
  #     - ./GameBackend:/app
  #   ports:
  #     - "5000:5000"
  #   networks:
  #     - app-network

  database:
    image: mysql:8.0
    container_name: database
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: chess_nest
      MYSQL_USER: lara
      MYSQL_PASSWORD: lara 
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
  
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_USER: lara
      PMA_PASSWORD: lara
    ports:
      - "8080:80"
    depends_on:
      - database
    networks:
      - app-network

  proxy:
    image: nginx:1.23
    container_name: nginx
    volumes:
      - ./nginx:/etc/nginx/conf.d
    ports:
      - "80:80"
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
